<template>
<view wx:if="{{reveal}}" class="mnui-toast" animation="{{animationData}}" style="{{textStyle}}">
  <icon wx:if="{{options.icon}}" type="{{options.icon}}" color="{{options.iconColor || '#fff'}}" />
  <view class="mnui-toast__text">{{options.text || ''}}</view>
</view>
</template>

<script>
import wepy from 'wepy'

export default class Toast extends wepy.component {
  data = {
    timer: null,
    animationData: '',
    reveal: false,
    options: {},
  }
  props = {
    color: {
      type: String,
      default: '#fff',
    },
    backgroundColor: {
      type: String,
      default: 'rgba(0,0,0,0.7)',
    },
  }
  computed = {
    textStyle () {
      return this.calcStyle({
        color: this.color,
        'background-color': this.backgroundColor,
      })
    },
  }

  calcStyle (style) {
    let ret = ''
    for (let key in style) {
      ret += `${key}:${style[key]};`
    }
    return ret
  }
  show (options = {}) {
    // 如果传递参数为字符串，将其转为object
    if (typeof options === 'string') {
      options = {
        text: options
      }
    }
    // 初始化并传递参数
    options = Object.assign({
      duration: 1500
    }, options)
    this.options = options
    // 展示内容
    this.reveal = true
    this.$apply()
    // 清除toast的timer
    clearTimeout(this.timer)
    setTimeout(() => { // 创建animateData
      let animation = wepy.createAnimation({
        duration: 150,
        timingFunction: 'ease-in-out',
      })
      animation.opacity(1).step()
      this.animationData = animation.export()
      this.$apply()
    }, 10)
    // duration为0，立即生效，实际上有150ms动画时间
    if (options.duration === 0) {
      return new Promise((resolve, reject) => {
        setTimeout(() => { resolve(options) }, 150)
      })
    } else {
      return new Promise((resolve, reject) => {
        this.timer = setTimeout(() => {
          this.toast()
          resolve(options)
        }, options.duration + 150)
      })
    }
  }
  toast (options) { // options不存在就执行hide
    let err = false
    // 防止各种错误导致toast卡死
    try {
      if (!options) {
        this.hide()
      } else {
        this.show(options)
      }
    } catch (error) {
      err = error
    }
    return new Promise((resolve, reject) => {
      if (!err) {
        resolve(options)
      } else {
        reject(err)
      }
    })
  }
  hide () {
    clearTimeout(this.timer)
    this.reveal = false
    let animation = wepy.createAnimation({
      duration: 150,
      timingFunction: 'ease-in-out',
    })
    animation.opacity(0).step()
    this.animationData = animation.export()
    this.$apply()
    return new Promise((resolve, reject) => {
      resolve()
    })
  }
}
</script>

<style>
.mnui-toast {
  opacity: 0;
  box-sizing: border-box;
  position: fixed;
  z-index: 9999;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  min-width: 40%;
  max-width: 60%;
  padding: 20rpx;
  line-height: 1.5em;
  text-align: center;
  font-size: 30rpx;
  border-radius: 10rpx;
  color: #fff;
  background-color: rgba(0, 0, 0, .7);
}
.mnui-toast__text {
  overflow : hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
}
</style>
